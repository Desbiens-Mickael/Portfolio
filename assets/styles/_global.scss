body{
  background-image: url("/assets/images/accueil.png");
  background-size: auto ;
  box-sizing: border-box;
  margin: 0 !important;
  padding: 0 !important;
  border: 0 !important;
  overflow: visible !important;
}

h1, h2, h3{
  letter-spacing: .2rem;
  font-weight: normal;
  font-family: 'Yeseva One', cursive;
}

main{
  margin-top: 6rem;
}

h1{

}

.transition-fade {
  transition: 0.6s;
}
.transition-translate-right{
  transition: 0.6s;
}

.transition-translate-left{
  transition: 0.6s;
}

.transition-pop{
  transition: 0.6s;
}

html.is-animating .transition-fade{
  opacity: 0;
  transform: translateY(50px);
}

html.is-animating .transition-translate-right{
  opacity: 0;
  transform: translateX(100px);
}

html.is-animating .transition-translate-left{
  opacity: 0;
  transform: translateX(-100px);
}

html.is-animating .transition-pop{
  opacity: 0;
}

html.is-animating.is-leaving .transition-fade{
 transition-delay: 0s !important;
}

html.is-animating.is-leaving .transition-translate-right{
  transition-delay: 0s !important;
}

html.is-animating.is-leaving .transition-translate-left{
  transition-delay: 0s !important;
}

html.is-animating.is-leaving .transition-pop{
  transition-delay: 0s !important;
}

.delay1{
  transition-delay: .2s;
}

.delay2{
  transition-delay: .4s;
}

.delay3{
  transition-delay: .6s;
}
.delay4{
  transition-delay: .8s;
}
.delay5{
  transition-delay: .10s;
}

.width-10{
  width: 10%;
}
.width-20{
  width: 20%;
}
.width-30{
  width: 30%;
}
.width-40{
  width: 40%;
}
.width-50{
  width: 50%;
}
.width-60{
  width: 60%;
}
.width-70{
  width: 70%;
}
.width-80{
  width: 80%;
}
.width-90{
  width: 90%;
}
.width-100{
  width: 100%;
}

@mixin reflectiveButton ($colorReflection, $backgroundColor, $textHoverColor, $textStartColor) {
  position: relative;
  padding: 8px 20px;
  overflow: hidden;
  color: $textStartColor;
  transition: .5s;
  &::before {
    position: absolute;
    content: "";
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
                    120deg,
                    transparent,
                    $colorReflection,
                    transparent
    ) !important;
    transform: translateX(-100%);
    transition: 0.5s;
  }
  &::after {
    position: absolute;
    content: "";
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: $backgroundColor !important;
    z-index: -1;
  }
  &:hover {
    background: transparent;
    color: $textHoverColor !important;
    &::before {
      transform: translateX(100%);
    }
  }
}


